"use client"
import * as React from "react";
import LampImage from "./lampImage";
import { motion } from "framer-motion";
import heroImage from "../assets/bgHero.png";
import { TypeAnimation } from "react-type-animation";
import GraphemeSplitter from 'grapheme-splitter';
function ImageDisplay() {
  const splitter = new GraphemeSplitter();
  const handleScrollToSkills = () => {
    const skillsSection = document.getElementById('skills-section');
    if (skillsSection) {
      skillsSection.scrollIntoView({ behavior: 'smooth' });
    }
  };

  const handleScrollToHero = () => {
    const heroSection = document.getElementById('hero-section');
    if (heroSection) {
      heroSection.scrollIntoView({ behavior: 'smooth' });
    }
  };

  const handleScroll = (e) => {
    if (e.deltaY < 0) {
      // Scrolling up
      handleScrollToHero();
    } else if (e.deltaY > 0) {
      // Scrolling down
      handleScrollToSkills();
    }
  };

  return (
    <>
    <div className="flex flex-row items-start justify-between w-full gap-8 max-md:flex-col" id="hero-section" onWheel={handleScroll}>
      <div className="flex flex-col max-w-[600px] ml-[10vw]">
        <LampImage />
        <motion.div 
          className="self-start text-5xl max-md:text-4xl"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 2, duration: 0.5 }}
        >
          RABIN ADHIKARI
        </motion.div>
        <motion.div 
          className="w-full max-md:max-w-full text-2xl max-md:text-2xl"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 2.5, duration: 0.5 }}
        >
          Crafting digital experiences live
        </motion.div>
      </div>
      <div className="flex flex-col items-center justify-center">
        <motion.div
          className="relative max-md:h-[300px] h-[100vh]" 
          initial={{ opacity: 0, scale: 0.8 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ delay: 1.5, duration: 0.8 }}
        >
          <img
            src={heroImage.src} 
            alt="Profile"
            className="w-full h-full max-h-screen"
          />
        </motion.div>
      </div>
    </div>
    <svg width="300" height="500" viewBox="0 -23.52 109.908 109.908" className="absolute top-4 right-4 mr-5" xmlns="http://www.w3.org/2000/svg">
      <g transform="translate(-649.324 -1577.937)">
        <rect width="83.969" height="53.184" transform="translate(662.292 1581.085)" fill="#576d78"/>
        <path d="M746.076,1577.937h-83.6a2.252,2.252,0,0,0-2.24,2.244v56.543h88.076v-56.543A2.245,2.245,0,0,0,746.076,1577.937Zm.186,56.332h-83.97v-53.184h83.97Z" fill="#163844"/>
        <g>
          <path d="M759.232,1639.962a.84.84,0,0,1-.845.84H650.162a.837.837,0,0,1-.838-.84v-2.4a.837.837,0,0,1,.838-.836H758.387a.84.84,0,0,1,.845.836Z" fill="#e4e7e7"/>
        </g>
        <path d="M704.825,1579.505a.548.548,0,1,1-.548-.553A.549.549,0,0,1,704.825,1579.505Z" fill="#fbfbfb"/>
        <path d="M695.832,1636.724v.652a.841.841,0,0,0,.84.836h15.21a.843.843,0,0,0,.838-.836v-.652Z" fill="#c9d1d1"/>
        <foreignObject width="83.969" height="53.184" x="664" y="1583">
          <div xmlns="http://www.w3.org/1999/xhtml">
              <TypeAnimation
                splitter={(str) => splitter.splitGraphemes(str)}
                sequence={[
                  '# Introducing myself and my work',
                  2000,
                  'def introduce_myself():',
                  2000,
                  '    print("Hello, my name is Rabin Adhikari.")',
                  2000,
                  '    print("I am a DevOps Engineer with expertise in:")',
                  2000,
                  '    print("- Frontend development: Creating intuitive and responsive user interfaces.")',
                  2000,
                  '    print("- Backend development: Building robust and scalable server-side solutions")',
                  2000,
                  '   print("- Data management: Designing efficient data management solutions")',
                  2000,
                  '   print("- Solution architecture: Crafting scalable and reliable system designs")',
                  2000,
                  '   print("- DevOps: Streamlining CI/CD pipelines, infrastructure automation, and cloud integration")',
                  2000,
                  '   print("\nI am passionate about solving problems and building reliable, innovative solutions.")',
                  2000
                ]}
                style={{ fontSize: '5px', fontFamily: 'typewriter' }}
                repeat={Infinity}
              />
          </div>
        </foreignObject>
      </g>
    </svg>
    <button 
      onClick={handleScrollToSkills}
      className="scroll-me animate-pulse absolute left-1/2 bottom-8 transform -translate-x-1/2 text-center align-middle"
      title="Scroll to Skills Section"
    >
        <svg 
          xmlns="http://www.w3.org/2000/svg" 
          width="24" 
          height="24" 
          viewBox="0 0 24 24" 
          fill="none" 
          stroke="currentColor" 
          strokeWidth="2" 
          strokeLinecap="round" 
          strokeLinejoin="round"
          className="animate-bounce"
        >
          <path d="M7 13l5 5 5-5"/>
          <path d="M7 6l5 5 5-5"/>
        </svg>
    </button>
    <div className="absolute left-0 top-1/2 transform -translate-y-1/2">
      <svg xmlns="http://www.w3.org/2000/svg" width="21" height="183" viewBox="0 0 21 183" fill="white">
        <motion.path 
          d="M11 123C13.7614 123 16 120.761 16 118C16 115.239 13.7614 113 11 113C8.23858 113 6 115.239 6 118C6 120.761 8.23858 123 11 123Z" 
          fill="white"
          initial={{ opacity: 0, scale: 0 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            duration: 0.4,
            scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
          }}
        />
        <motion.path 
          d="M11 127.5C16.2467 127.5 20.5 123.247 20.5 118C20.5 112.753 16.2467 108.5 11 108.5C5.75329 108.5 1.5 112.753 1.5 118C1.5 123.247 5.75329 127.5 11 127.5Z" 
          stroke="white"
          initial={{ opacity: 0, scale: 0 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            duration: 0.4,
            scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
          }}
        />
        <motion.path 
          d="M5.6464 178.646C5.4512 178.842 5.4512 179.158 5.6464 179.354L8.8284 182.536C9.0237 182.731 9.3403 182.731 9.5355 182.536C9.7308 182.34 9.7308 182.024 9.5355 181.828L6.7071 179L9.5355 176.172C9.7308 175.976 9.7308 175.66 9.5355 175.464C9.3403 175.269 9.0237 175.269 8.8284 175.464L5.6464 178.646ZM16 178.5H6V179.5H16V178.5Z" 
          fill="white"
          initial={{ opacity: 0, scale: 0 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            duration: 0.4,
            scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
          }}
        />
        <motion.path 
          d="M1 0.5H21" 
          stroke="white"
          initial={{ opacity: 0, scale: 0 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            duration: 0.4,
            scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
          }}
        />
        <motion.path 
          d="M11.5079 51.4844V54.5234H10.2813V51.4844C10.2813 50.8958 10.1876 50.4193 10.0001 50.0547C9.81256 49.6901 9.55214 49.4245 9.21881 49.2578C8.88548 49.0859 8.50527 49 8.07819 49C7.68756 49 7.32037 49.0859 6.97662 49.2578C6.63287 49.4245 6.35683 49.6901 6.1485 50.0547C5.93496 50.4193 5.82819 50.8958 5.82819 51.4844V54.1719H15.9688V55.6797H4.59381V51.4844C4.59381 50.625 4.74225 49.8984 5.03912 49.3047C5.336 48.7109 5.74746 48.2604 6.2735 47.9531C6.79433 47.6458 7.39069 47.4922 8.06256 47.4922C8.79173 47.4922 9.41412 47.6458 9.92975 47.9531C10.4454 48.2604 10.8386 48.7109 11.1094 49.3047C11.3751 49.8984 11.5079 50.625 11.5079 51.4844ZM8.84381 44.3594H15.9688V45.8047H7.51569V44.3984L8.84381 44.3594ZM7.46881 41.7188L8.81256 41.7266C8.78652 41.8464 8.77089 41.9609 8.76569 42.0703C8.75527 42.1745 8.75006 42.2943 8.75006 42.4297C8.75006 42.763 8.80214 43.0573 8.90631 43.3125C9.01048 43.5677 9.15631 43.7839 9.34381 43.9609C9.53131 44.138 9.75527 44.2786 10.0157 44.3828C10.2709 44.4818 10.5521 44.5469 10.8594 44.5781L11.0938 44.9844C10.5834 44.9844 10.1042 44.9349 9.65631 44.8359C9.20839 44.7318 8.81256 44.5729 8.46881 44.3594C8.11985 44.1458 7.84902 43.875 7.65631 43.5469C7.45839 43.2135 7.35944 42.8177 7.35944 42.3594C7.35944 42.2552 7.37246 42.1354 7.3985 42C7.41933 41.8646 7.44277 41.7708 7.46881 41.7188ZM11.836 40.9219H11.6563C11.0469 40.9219 10.4818 40.8333 9.961 40.6562C9.43496 40.4792 8.97923 40.224 8.59381 39.8906C8.20319 39.5573 7.9011 39.1536 7.68756 38.6797C7.46881 38.2057 7.35944 37.6745 7.35944 37.0859C7.35944 36.4922 7.46881 35.9583 7.68756 35.4844C7.9011 35.0052 8.20319 34.599 8.59381 34.2656C8.97923 33.9271 9.43496 33.6693 9.961 33.4922C10.4818 33.3151 11.0469 33.2266 11.6563 33.2266H11.836C12.4454 33.2266 13.0105 33.3151 13.5313 33.4922C14.0521 33.6693 14.5079 33.9271 14.8985 34.2656C15.2839 34.599 15.586 35.0026 15.8047 35.4766C16.0183 35.9453 16.1251 36.4766 16.1251 37.0703C16.1251 37.6641 16.0183 38.1979 15.8047 38.6719C15.586 39.1458 15.2839 39.5521 14.8985 39.8906C14.5079 40.224 14.0521 40.4792 13.5313 40.6562C13.0105 40.8333 12.4454 40.9219 11.836 40.9219ZM11.6563 39.4766H11.836C12.2579 39.4766 12.6563 39.4271 13.0313 39.3281C13.4011 39.2292 13.7292 39.0807 14.0157 38.8828C14.3021 38.6797 14.5287 38.4271 14.6954 38.125C14.8568 37.8229 14.9376 37.4714 14.9376 37.0703C14.9376 36.6745 14.8568 36.3281 14.6954 36.0312C14.5287 35.7292 14.3021 35.4792 14.0157 35.2812C13.7292 35.0833 13.4011 34.9349 13.0313 34.8359C12.6563 34.7318 12.2579 34.6797 11.836 34.6797H11.6563C11.2396 34.6797 10.8464 34.7318 10.4766 34.8359C10.1016 34.9349 9.77089 35.0859 9.48444 35.2891C9.19277 35.487 8.9636 35.737 8.79694 36.0391C8.63027 36.3359 8.54694 36.6849 8.54694 37.0859C8.54694 37.4818 8.63027 37.8307 8.79694 38.1328C8.9636 38.4297 9.19277 38.6797 9.48444 38.8828C9.77089 39.0807 10.1016 39.2292 10.4766 39.3281C10.8464 39.4271 11.2396 39.4766 11.6563 39.4766ZM15.9688 29.4844V30.9297H6.78131C6.14069 30.9297 5.59902 30.8047 5.15631 30.5547C4.7136 30.3047 4.37767 29.9479 4.1485 29.4844C3.91933 29.0208 3.80475 28.4714 3.80475 27.8359C3.80475 27.4609 3.85162 27.0938 3.94537 26.7344C4.03392 26.375 4.14589 26.0052 4.28131 25.625L5.50006 25.8672C5.40631 26.1068 5.31777 26.3854 5.23444 26.7031C5.14589 27.0156 5.10162 27.3594 5.10162 27.7344C5.10162 28.3542 5.24225 28.8021 5.5235 29.0781C5.79954 29.349 6.21881 29.4844 6.78131 29.4844H15.9688ZM7.51569 27.7578H8.62506V32.2656H7.51569V27.7578ZM7.51569 24.9141H15.9688V26.3594H7.51569V24.9141ZM3.96881 20.9688H15.9688V22.4219H3.96881V20.9688ZM16.1251 15.1406C16.1251 15.7292 16.0261 16.263 15.8282 16.7422C15.6251 17.2161 15.3412 17.625 14.9766 17.9688C14.612 18.3073 14.1797 18.5677 13.6797 18.75C13.1797 18.9323 12.6329 19.0234 12.0391 19.0234H11.711C11.0235 19.0234 10.4115 18.9219 9.87506 18.7188C9.33339 18.5156 8.87506 18.2396 8.50006 17.8906C8.12506 17.5417 7.84121 17.1458 7.6485 16.7031C7.45579 16.2604 7.35944 15.8021 7.35944 15.3281C7.35944 14.724 7.4636 14.2031 7.67194 13.7656C7.88027 13.3229 8.17194 12.9609 8.54694 12.6797C8.91673 12.3984 9.35423 12.1901 9.85944 12.0547C10.3594 11.9193 10.9063 11.8516 11.5001 11.8516H12.1485V18.1641H10.9688V13.2969H10.8594C10.4844 13.3177 10.1199 13.3958 9.76569 13.5312C9.41152 13.6615 9.11985 13.8698 8.89069 14.1562C8.66152 14.4427 8.54694 14.8333 8.54694 15.3281C8.54694 15.6562 8.61725 15.9583 8.75787 16.2344C8.89329 16.5104 9.09642 16.7474 9.36725 16.9453C9.63808 17.1432 9.96881 17.2969 10.3594 17.4062C10.7501 17.5156 11.2006 17.5703 11.711 17.5703H12.0391C12.4402 17.5703 12.8178 17.5156 13.1719 17.4062C13.5209 17.2917 13.8282 17.1276 14.0938 16.9141C14.3594 16.6953 14.5678 16.4323 14.7188 16.125C14.8699 15.8125 14.9454 15.4583 14.9454 15.0625C14.9454 14.5521 14.8412 14.1198 14.6329 13.7656C14.4245 13.4115 14.1459 13.1016 13.7969 12.8359L14.4922 11.9609C14.7683 12.1432 15.0313 12.375 15.2813 12.6562C15.5313 12.9375 15.7344 13.2839 15.8907 13.6953C16.0469 14.1016 16.1251 14.5833 16.1251 15.1406Z" 
          fill="white"
          initial={{ opacity: 0, scale: 0 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            duration: 0.4,
            scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
          }}
        />
      </svg>
    </div>
    <div className="absolute right-0 top-1/2 transform -translate-y-1/2">
      <motion.svg xmlns="http://www.w3.org/2000/svg" width="21" height="183" viewBox="0 0 21 183" fill="white"
        initial={{ opacity: 0, scale: 0 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{
          duration: 0.4,
          scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
        }}
      >
        <motion.path 
          d="M11 123C13.7614 123 16 120.761 16 118C16 115.239 13.7614 113 11 113C8.23858 113 6 115.239 6 118C6 120.761 8.23858 123 11 123Z" 
          fill="white"
          initial={{ opacity: 0, scale: 0 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            duration: 0.4,
            scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
          }}
        />
        <motion.path 
          d="M11 127.5C16.2467 127.5 20.5 123.247 20.5 118C20.5 112.753 16.2467 108.5 11 108.5C5.75329 108.5 1.5 112.753 1.5 118C1.5 123.247 5.75329 127.5 11 127.5Z" 
          stroke="white"
          initial={{ opacity: 0, scale: 0 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            duration: 0.4,
            scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
          }}
        />
        <motion.path 
          d="M16.3536 178.646C16.5488 178.842 16.5488 179.158 16.3536 179.354L13.1716 182.536C12.9763 182.731 12.6597 182.731 12.4645 182.536C12.2692 182.34 12.2692 182.024 12.4645 181.828L15.2929 179L12.4645 176.172C12.2692 175.976 12.2692 175.66 12.4645 175.464C12.6597 175.269 12.9763 175.269 13.1716 175.464L16.3536 178.646ZM6 178.5H16V179.5H6V178.5Z" 
          fill="white"
          initial={{ opacity: 0, scale: 0 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            duration: 0.4,
            scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
          }}
        />
        <motion.path 
          d="M1 0.5H21" 
          stroke="white"
          initial={{ opacity: 0, scale: 0 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            duration: 0.4,
            scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
          }}
        />
        <motion.path 
          d="M11.5079 51.4844V54.5234H10.2813V51.4844C10.2813 50.8958 10.1876 50.4193 10.0001 50.0547C9.81256 49.6901 9.55214 49.4245 9.21881 49.2578C8.88548 49.0859 8.50527 49 8.07819 49C7.68756 49 7.32037 49.0859 6.97662 49.2578C6.63287 49.4245 6.35683 49.6901 6.1485 50.0547C5.93496 50.4193 5.82819 50.8958 5.82819 51.4844V54.1719H15.9688V55.6797H4.59381V51.4844C4.59381 50.625 4.74225 49.8984 5.03912 49.3047C5.336 48.7109 5.74746 48.2604 6.2735 47.9531C6.79433 47.6458 7.39069 47.4922 8.06256 47.4922C8.79173 47.4922 9.41412 47.6458 9.92975 47.9531C10.4454 48.2604 10.8386 48.7109 11.1094 49.3047C11.3751 49.8984 11.5079 50.625 11.5079 51.4844ZM8.84381 44.3594H15.9688V45.8047H7.51569V44.3984L8.84381 44.3594ZM7.46881 41.7188L8.81256 41.7266C8.78652 41.8464 8.77089 41.9609 8.76569 42.0703C8.75527 42.1745 8.75006 42.2943 8.75006 42.4297C8.75006 42.763 8.80214 43.0573 8.90631 43.3125C9.01048 43.5677 9.15631 43.7839 9.34381 43.9609C9.53131 44.138 9.75527 44.2786 10.0157 44.3828C10.2709 44.4818 10.5521 44.5469 10.8594 44.5781L11.0938 44.9844C10.5834 44.9844 10.1042 44.9349 9.65631 44.8359C9.20839 44.7318 8.81256 44.5729 8.46881 44.3594C8.11985 44.1458 7.84902 43.875 7.65631 43.5469C7.45839 43.2135 7.35944 42.8177 7.35944 42.3594C7.35944 42.2552 7.37246 42.1354 7.3985 42C7.41933 41.8646 7.44277 41.7708 7.46881 41.7188ZM11.836 40.9219H11.6563C11.0469 40.9219 10.4818 40.8333 9.961 40.6562C9.43496 40.4792 8.97923 40.224 8.59381 39.8906C8.20319 39.5573 7.9011 39.1536 7.68756 38.6797C7.46881 38.2057 7.35944 37.6745 7.35944 37.0859C7.35944 36.4922 7.46881 35.9583 7.68756 35.4844C7.9011 35.0052 8.20319 34.599 8.59381 34.2656C8.97923 33.9271 9.43496 33.6693 9.961 33.4922C10.4818 33.3151 11.0469 33.2266 11.6563 33.2266H11.836C12.4454 33.2266 13.0105 33.3151 13.5313 33.4922C14.0521 33.6693 14.5079 33.9271 14.8985 34.2656C15.2839 34.599 15.586 35.0026 15.8047 35.4766C16.0183 35.9453 16.1251 36.4766 16.1251 37.0703C16.1251 37.6641 16.0183 38.1979 15.8047 38.6719C15.586 39.1458 15.2839 39.5521 14.8985 39.8906C14.5079 40.224 14.0521 40.4792 13.5313 40.6562C13.0105 40.8333 12.4454 40.9219 11.836 40.9219ZM11.6563 39.4766H11.836C12.2579 39.4766 12.6563 39.4271 13.0313 39.3281C13.4011 39.2292 13.7292 39.0807 14.0157 38.8828C14.3021 38.6797 14.5287 38.4271 14.6954 38.125C14.8568 37.8229 14.9376 37.4714 14.9376 37.0703C14.9376 36.6745 14.8568 36.3281 14.6954 36.0312C14.5287 35.7292 14.3021 35.4792 14.0157 35.2812C13.7292 35.0833 13.4011 34.9349 13.0313 34.8359C12.6563 34.7318 12.2579 34.6797 11.836 34.6797H11.6563C11.2396 34.6797 10.8464 34.7318 10.4766 34.8359C10.1016 34.9349 9.77089 35.0859 9.48444 35.2891C9.19277 35.487 8.9636 35.737 8.79694 36.0391C8.63027 36.3359 8.54694 36.6849 8.54694 37.0859C8.54694 37.4818 8.63027 37.8307 8.79694 38.1328C8.9636 38.4297 9.19277 38.6797 9.48444 38.8828C9.77089 39.0807 10.1016 39.2292 10.4766 39.3281C10.8464 39.4271 11.2396 39.4766 11.6563 39.4766ZM15.9688 29.4844V30.9297H6.78131C6.14069 30.9297 5.59902 30.8047 5.15631 30.5547C4.7136 30.3047 4.37767 29.9479 4.1485 29.4844C3.91933 29.0208 3.80475 28.4714 3.80475 27.8359C3.80475 27.4609 3.85162 27.0938 3.94537 26.7344C4.03392 26.375 4.14589 26.0052 4.28131 25.625L5.50006 25.8672C5.40631 26.1068 5.31777 26.3854 5.23444 26.7031C5.14589 27.0156 5.10162 27.3594 5.10162 27.7344C5.10162 28.3542 5.24225 28.8021 5.5235 29.0781C5.79954 29.349 6.21881 29.4844 6.78131 29.4844H15.9688ZM7.51569 27.7578H8.62506V32.2656H7.51569V27.7578ZM7.51569 24.9141H15.9688V26.3594H7.51569V24.9141ZM3.96881 20.9688H15.9688V22.4219H3.96881V20.9688ZM16.1251 15.1406C16.1251 15.7292 16.0261 16.263 15.8282 16.7422C15.6251 17.2161 15.3412 17.625 14.9766 17.9688C14.612 18.3073 14.1797 18.5677 13.6797 18.75C13.1797 18.9323 12.6329 19.0234 12.0391 19.0234H11.711C11.0235 19.0234 10.4115 18.9219 9.87506 18.7188C9.33339 18.5156 8.87506 18.2396 8.50006 17.8906C8.12506 17.5417 7.84121 17.1458 7.6485 16.7031C7.45579 16.2604 7.35944 15.8021 7.35944 15.3281C7.35944 14.724 7.4636 14.2031 7.67194 13.7656C7.88027 13.3229 8.17194 12.9609 8.54694 12.6797C8.91673 12.3984 9.35423 12.1901 9.85944 12.0547C10.3594 11.9193 10.9063 11.8516 11.5001 11.8516H12.1485V18.1641H10.9688V13.2969H10.8594C10.4844 13.3177 10.1199 13.3958 9.76569 13.5312C9.41152 13.6615 9.11985 13.8698 8.89069 14.1562C8.66152 14.4427 8.54694 14.8333 8.54694 15.3281C8.54694 15.6562 8.61725 15.9583 8.75787 16.2344C8.89329 16.5104 9.09642 16.7474 9.36725 16.9453C9.63808 17.1432 9.96881 17.2969 10.3594 17.4062C10.7501 17.5156 11.2006 17.5703 11.711 17.5703H12.0391C12.4402 17.5703 12.8178 17.5156 13.1719 17.4062C13.5209 17.2917 13.8282 17.1276 14.0938 16.9141C14.3594 16.6953 14.5678 16.4323 14.7188 16.125C14.8699 15.8125 14.9454 15.4583 14.9454 15.0625C14.9454 14.5521 14.8412 14.1198 14.6329 13.7656C14.4245 13.4115 14.1459 13.1016 13.7969 12.8359L14.4922 11.9609C14.7683 12.1432 15.0313 12.375 15.2813 12.6562C15.5313 12.9375 15.7344 13.2839 15.8907 13.6953C16.0469 14.1016 16.1251 14.5833 16.1251 15.1406Z" 
          fill="white"
          initial={{ opacity: 0, scale: 0 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            duration: 0.4,
            scale: { type: "spring", visualDuration: 0.4, bounce: 0.5 },
          }}
        />
      </motion.svg>
    </div>
    </>
  );
}

export default ImageDisplay;